delim   [\t\r\n ]
ws      {delim}+
number  {digits}(.{digits})?(e(\+|-)?{digits})?
digit   [0-9]
digits  {digit}+
primitive_type      boolean|byte|char|double|float|int|long|short
while    while
if     if
else    else
for     for
control_stmt   break|case|continue|default|do|instanceof|return|switch
modifier       abstract|class|extends|final|implements|interface|native|new|static|strictfp|synchronized|transient|volatile
key_words     assert|catch|const|enum|finally|goto|import|package|private|protected|public|super|this|throw|throws|try|void
reserved_words   null|{key_words}
bool_literal      true|false
literal   "({letter_}|{digit})*" | '({letter_}|{digit})'
id      {letter_}({letter_}|{digit})*
letter_     [A-Za-z_]
assignment      =|\+=|-=|\*=|/=|%=|&=|^=|\|=|<<=|>>=
add_op       \+|-
shift_op     <<|>>
mul_op       \*|/|%
unary_op        ~|&|^|exclaim
compare_op     >|<|>=|<=
equality_op    ==|!=
exclaim      !
bool_op       &&|\|\|
left_pare     \(
right_pare     \)
left_cur_bra      \{
right_cur_bra      \}
left_squ_bra    \[
right_squ_bra    \]
comma          ,
semicolon      ;
double_quo     "
single_quo     '